package simpledb;import java.util.Random;import java.sql.*;import java.io.*;import simpledb.remote.SimpleDriver;public class MergeJoinDataGenerator {	/**	 * @param args	 */	public static void main(String[] args) {		// TODO Auto-generated method stub		Connection conn = null;		Driver d = new SimpleDriver();		String host = "localhost"; // you may change it if your SimpleDB server									// is running on a different machine		String url = "jdbc:simpledb://" + host;		String table1 = "Create table t1" + "( a1 int," + "  b int" + ")";		String table2 = "Create table t2" + "( a2 int," + "  c int" + ")";		Random rand = null;		Statement s = null;		try {			conn = d.connect(url, null);			s = conn.createStatement();						s.executeUpdate(table1);			s.executeUpdate(table2);			rand = new Random(1);			for (int i = 0; i < 100; i++) {				s.executeUpdate(					"insert into t1 (a1, b) values(" + i + "," + rand.nextInt(10) + ")");				s.executeUpdate(					"insert into t2 (a2, c) values(" + (i + 100) + "," + rand.nextInt(10) + ")");			}		    printStatement(s, "select a1, b from t1 where b = 1");		    printStatement(s, "select a2, c from t2 where c = 1");			printStatement(s, "select a1, a2, b, c from t1, t2 where b = c");			conn.close();		} catch (SQLException e) {			// TODO Auto-generated catch block			e.printStackTrace();		} finally {			try {				conn.close();			} catch (SQLException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}		}	}	public static void printStatement(Statement s, String statement) throws SQLException {		    ResultSet rs = s.executeQuery(statement);		    ResultSetMetaData md = rs.getMetaData();		    int numcols = md.getColumnCount();		    int totalwidth = 0;		    // print header		    System.out.println();		    for(int i=1; i<=numcols; i++) {				int width = md.getColumnDisplaySize(i);				totalwidth += width;				String fmt = "%" + width + "s";				System.out.format(fmt, md.getColumnName(i));			}			System.out.println();			for(int i=0; i<totalwidth; i++)			    System.out.print("-");		    System.out.println();		    // print records		    while(rs.next()) {				for (int i=1; i<=numcols; i++) {					String fldname = md.getColumnName(i);					int fldtype = md.getColumnType(i);					String fmt = "%" + md.getColumnDisplaySize(i);					if (fldtype == Types.INTEGER)						System.out.format(fmt + "d", rs.getInt(fldname));					else						System.out.format(fmt + "s", rs.getString(fldname));				}				System.out.println();			}	}}